{"version":3,"sources":["components/Search/Search.js","components/Movie/Movie.js","components/SearchResults/SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["Search","API_KEY","getResults","text","setText","process","className","type","autoFocus","placeholder","value","onChange","e","target","axios","method","url","fetchSearchResults","then","res","data","Response","Movie","movie","button","setNominations","nominations","Title","Year","onClick","newArray","filter","nomination","imdbID","length","concat","disabled","findIndex","SearchResults","title","results","movies","map","index","App","useState","setResults","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3db13529.chunk.js","sourcesContent":["import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search';\nimport './Search.css'\nimport axios from 'axios';\n\nfunction Search({ getResults, text, setText }) {\n    \n    let API_KEY;\n\n    if (process.env.NODE_ENV !== 'production') {\n        API_KEY = process.env.REACT_APP_API_KEY;\n    } else {\n        API_KEY = process.env.API_KEY\n    }\n\n    const fetchSearchResults = (text) => {\n    return axios({\n        method: 'GET',\n        url: `https://www.omdbapi.com/?apikey=${API_KEY}&s=${text}&r=json&type=movie`\n        })\n      }\n\n    const handleChange = (e) => {\n        setText(e.target.value)\n\n        fetchSearchResults(text)\n            .then(res => {res.data.Response === \"True\" && getResults(res.data.Search)})\n    }\n\n\n    return (\n        <>\n         <h5>Movie title</h5>\n         <div className='search-bar'>\n             <SearchIcon className='search-icon'/>\n             <input className='search-field' type='text' autoFocus=\"autofocus\" placeholder='Search Movies...' value={text} onChange={handleChange} />\n        </div>\n        </>\n    )\n}\n\nexport default Search\n","import React from 'react';\nimport './Movie.css'\n\nexport default function Movie({ movie, button, setNominations, nominations }) {\n\n    const handleClick = () => {\n        if (button==='Remove') {\n            let newArray = nominations.filter(nomination => nomination.imdbID !== movie.imdbID)\n            return setNominations(newArray)\n        } else if (button==='Nominate' && nominations.length < 5) {\n            return setNominations(nominations.concat(movie))\n        }\n    }\n\n    return (\n        <li className='movie'>\n            <span>{movie.Title}({movie.Year})</span>\n            <input type='button' \n            className={'submit-button'}\n            value={button} \n            onClick={handleClick}\n            disabled={(nominations.findIndex(nomination => nomination.imdbID === movie.imdbID) !== -1 && button==='Nominate')\n            || (nominations.length >=5 && button==='Nominate') ? 'disabled' : ''} />\n        </li>\n    )\n}\n","import React from 'react';\nimport Movie from '../Movie/Movie';\nimport './SearchResults.css'\n\nexport default function SearchResults({ title, results, nominations, setNominations, button }) {\n\n    let movies = ''\n\n    if (results && results.length > 0) {\n        movies = results.map((movie, index) =>\n           <Movie\n           key={index}\n           movie={movie}\n           results={results}\n           nominations={nominations}\n           setNominations={setNominations}\n           button={button}\n           /> \n        )\n    } \n\n    return (\n        <div className='results-card'>\n            <h6>{title}</h6>\n            <ul>{movies}</ul>\n        </div>\n    )\n}\n","import { Fragment, useState } from 'react';\nimport './App.css';\nimport Search from './components/Search/Search';\nimport SearchResults from './components/SearchResults/SearchResults';\n\nfunction App() {\n\n  const [results, setResults] = useState(null)\n  const [nominations, setNominations] = useState([])\n  const [text, setText] = useState('')\n  \n  return (\n    <Fragment>\n      <header>\n      <h4>The Shoppies</h4>\n      <div className=\"search\">\n        <Search\n          getResults={setResults}\n          text={text}\n          setText={setText}/>\n      </div>\n      </header>\n      <section>\n        <SearchResults \n          title={`Results for '${text}'`}\n          results={results}\n          nominations={nominations}\n          setNominations={setNominations}\n          button={'Nominate'}\n          />\n        <SearchResults title={'Nominations'}\n          results={nominations}\n          nominations={nominations}\n          setNominations={setNominations}\n          button={'Remove'} />\n      </section> \n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}