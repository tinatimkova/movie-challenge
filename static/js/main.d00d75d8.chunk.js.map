{"version":3,"sources":["context/movies/moviesContext.js","context/types.js","context/movies/moviesReducer.js","context/movies/MoviesState.js","components/Search/Search.js","components/Movie/Movie.js","components/SearchResults/SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["moviesContext","createContext","SEARCH_MOVIES","SET_TEXT","state","action","type","text","payload","results","MoviesState","props","useReducer","MoviesReducer","nominations","dispatch","searchMovies","a","setText","axios","method","url","process","res","data","Response","Search","Provider","value","children","getResults","useContext","MoviesContext","className","autoFocus","placeholder","onChange","e","target","Movie","movie","button","setNominations","Title","Year","onClick","newArray","filter","nomination","imdbID","length","concat","disabled","findIndex","SearchResults","title","movies","map","index","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d00d75d8.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst moviesContext = createContext();\n\nexport default moviesContext;","export const SEARCH_MOVIES = 'SEARCH_MOVIES'\nexport const SET_TEXT = 'SET_TEXT'\nexport const SET_NOMINATIONS = 'SET_NOMINATIONS'\nexport const REMOVE_NOMINATIONS = 'REMOVE_NOMINATIONS'","import { SEARCH_MOVIES, SET_TEXT, REMOVE_NOMINATIONS, SET_NOMINATIONS } from '../types'\n\nexport default (state, action) => {\n    switch(action.type) {\n        case SET_TEXT:\n            return {\n                ...state, \n                text: action.payload.text\n            }\n        case SEARCH_MOVIES:\n            return {\n                ...state,\n                results: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport MoviesContext from './moviesContext';\nimport MoviesReducer from './moviesReducer';\nimport { SEARCH_MOVIES, SET_TEXT, REMOVE_NOMINATIONS, SET_NOMINATIONS } from '../types'\n\nconst MoviesState = props => {\n    // global state\n    const initialState = {\n        results: null,\n        text: '',\n        nominations: []\n    }\n\n    const [ state, dispatch ] = useReducer(MoviesReducer, initialState)\n\n    // Search Movies\n    const searchMovies = async text => {\n        setText(text)\n\n        const res = await axios({\n            method: 'GET',\n            url: `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&s=${state.text}&r=json&type=movie`\n            })  \n          \n       {res.data.Response === \"True\" ? dispatch({ type: SEARCH_MOVIES, payload: res.data.Search}) : dispatch({ type: SEARCH_MOVIES, payload: [] })}\n    }\n\n    // Input text\n    const setText = (text) => dispatch({ type: SET_TEXT, payload: { text } })\n\n    // Add a movie to the nomination list\n\n    // Remove a movie from the nomination list\n\n    return (\n    <MoviesContext.Provider value={{ results: state.results, text: state.text, nominations: state.nominations, setText, searchMovies }}>\n        {props.children}\n    </MoviesContext.Provider>\n    )\n}\n\nexport default MoviesState;\n","import React, { useContext } from 'react'\nimport SearchIcon from '@material-ui/icons/Search';\nimport './Search.css'\nimport axios from 'axios';\n\nimport MoviesContext from '../../context/movies/moviesContext'\n\nfunction Search({ getResults }) {\n\n    const moviesContext = useContext(MoviesContext)\n\n    const { text, searchMovies } = moviesContext\n\n    return (\n        <>\n         <h5>Movie title</h5>\n         <div className='search-bar'>\n             <SearchIcon className='search-icon'/>\n             <input className='search-field' type='text' autoFocus=\"autofocus\" placeholder='Search Movies...' value={text} onChange={e => searchMovies(e.target.value)} />\n        </div>\n        </>\n    )\n}\n\nexport default Search\n","import React from 'react';\nimport './Movie.css'\n\nexport default function Movie({ movie, button, setNominations, nominations }) {\n\n    const handleClick = () => {\n        if (button==='Remove') {\n            let newArray = nominations.filter(nomination => nomination.imdbID !== movie.imdbID)\n            return setNominations(newArray)\n        } else if (button==='Nominate' && nominations.length < 5) {\n            return setNominations(nominations.concat(movie))\n        }\n    }\n\n    return (\n        <li className='movie'>\n            <span>{movie.Title}({movie.Year})</span>\n            <input type='button' \n            className={'submit-button'}\n            value={button} \n            onClick={handleClick}\n            disabled={(nominations.findIndex(nomination => nomination.imdbID === movie.imdbID) !== -1 && button==='Nominate')\n            || (nominations.length >=5 && button==='Nominate') ? 'disabled' : ''} />\n        </li>\n    )\n}\n","import React, { useContext } from 'react';\nimport Movie from '../Movie/Movie';\nimport './SearchResults.css';\nimport MoviesContext from '../../context/movies/moviesContext';\n\nexport default function SearchResults({ title, nominations, setNominations, button }) {\n\n    const moviesContext = useContext(MoviesContext)\n\n    let movies = ''\n    let results = ''\n    {button==='Remove' ? results=nominations : results=moviesContext.results}\n\n    if (results && results.length > 0) {\n        movies = results.map((movie, index) =>\n           <Movie\n           key={index}\n           movie={movie}\n           nominations={nominations}\n           setNominations={setNominations}\n           button={button}\n           /> \n        )\n    }\n\n    return (\n        <div className='results-card'>\n            <h6>{title}</h6>\n            <ul>{movies}</ul>\n        </div>\n    )\n}\n","import { useState } from 'react';\nimport MoviesState from './context/movies/MoviesState'\nimport './App.css';\nimport Search from './components/Search/Search';\nimport SearchResults from './components/SearchResults/SearchResults';\n\nfunction App() {\n\n  const [nominations, setNominations] = useState([])\n\n  return (\n    <MoviesState>\n      <header>\n      <h4>The Shoppies</h4>\n      <div className=\"search\">\n        <Search />\n      </div>\n      </header>\n      <section>\n        <SearchResults \n          title={'Movies'}\n          nominations={nominations}\n          setNominations={setNominations}\n          button={'Nominate'}\n          />\n        <SearchResults title={'Nominations'}\n          results={nominations}\n          nominations={nominations}\n          setNominations={setNominations}\n          button={'Remove'} />\n      </section> \n    </MoviesState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}